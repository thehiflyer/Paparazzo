buildscript {
	repositories {
		mavenCentral()
		//Needed only for SNAPSHOT versions
		//maven { url "http://oss.sonatype.org/content/repositories/snapshots/" }
	}
	dependencies {
		classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.1.10'
	}
}

plugins {
	id "com.ofg.uptodate" version "1.1.0"
	id 'me.champeau.gradle.jmh' version '0.3.0'
}

apply plugin: 'java'
apply plugin: 'me.champeau.gradle.jmh'
apply plugin: "info.solidsoft.pitest"

jmh {
	include = '.*ManyFalse.*'
	//include '.*'
	jmhVersion = '1.12'
	warmupIterations = 8
	iterations = 5
	fork = 3
	timeUnit = 'ns'
	forceGC = true // Should JMH force GC between iterations?
	jvmArgs = "-XX:+UnlockCommercialFeatures -XX:+FlightRecorder -XX:StartFlightRecording=duration=60s,filename=myrecording.jfr -XX:+UnlockDiagnosticVMOptions -XX:+DebugNonSafepoints"
	//jvmArgs = '-XX:+UseG1GC'
}

group = 'se.hiflyer'
sourceCompatibility = 1.8
version = '0.2'


repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.7'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'com.google.guava', name: 'guava', version: '18.0'
    testCompile group: 'se.mockachino', name: 'mockachino', version: '0.6.1'
    testRuntime group: 'ch.qos.logback', name: 'logback-classic', version: "1.1.2"
	jmh 'org.hdrhistogram:HdrHistogram:2.1.8'
}

ext {
	javaCompilerExecutable = System.env['JAVA_HOME'] ? System.env['JAVA_HOME'] + '/bin/javac' : 'javac'
}

compileJmhJava {
	options.compilerArgs << '-XDignore.symbol.file'
	options.fork = true
	options.debug = true
	options.forkOptions.executable = javaCompilerExecutable
	options.warnings = false
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.13'
}